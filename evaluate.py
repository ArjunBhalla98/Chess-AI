import chess
import math
import pickle

with open("position_weights.pickle", "rb") as handle:
    PIECE_WEIGHTS = pickle.load(handle)

PIECE_VALUES = {
    "p": 10,
    "b": 30,
    "n": 30,
    "r": 50,
    "q": 90,
    "k": 31337
}

# PIECE_WEIGHTS = {
#     "p": [
#         [0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
#         [5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0],
#         [1.0,  1.0,  2.0,  3.0,  3.0,  2.0,  1.0,  1.0],
#         [0.5,  0.5,  1.0,  2.5,  2.5,  1.0,  0.5,  0.5],
#         [0.0,  0.0,  0.0,  2.0,  2.0,  0.0,  0.0,  0.0],
#         [0.5, -0.5, -1.0,  0.0,  0.0, -1.0, -0.5,  0.5],
#         [0.5,  1.0, 1.0,  -2.0, -2.0,  1.0,  1.0,  0.5],
#         [0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0]
#     ],
#     "n": [
#         [-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0],
#         [-4.0, -2.0,  0.0,  0.0,  0.0,  0.0, -2.0, -4.0],
#         [-3.0,  0.0,  1.0,  1.5,  1.5,  1.0,  0.0, -3.0],
#         [-3.0,  0.5,  1.5,  2.0,  2.0,  1.5,  0.5, -3.0],
#         [-3.0,  0.0,  1.5,  2.0,  2.0,  1.5,  0.0, -3.0],
#         [-3.0,  0.5,  1.0,  1.5,  1.5,  1.0,  0.5, -3.0],
#         [-4.0, -2.0,  0.0,  0.5,  0.5,  0.0, -2.0, -4.0],
#         [-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0]
#     ],
#     "b": [
#         [-2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0],
#         [-1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0],
#         [-1.0,  0.0,  0.5,  1.0,  1.0,  0.5,  0.0, -1.0],
#         [-1.0,  0.5,  0.5,  1.0,  1.0,  0.5,  0.5, -1.0],
#         [-1.0,  0.0,  1.0,  1.0,  1.0,  1.0,  0.0, -1.0],
#         [-1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0],
#         [-1.0,  0.5,  0.0,  0.0,  0.0,  0.0,  0.5, -1.0],
#         [-2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0]
#     ],
#     "r": [
#         [0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
#         [0.5,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  0.5],
#         [-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
#         [-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
#         [-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
#         [-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
#         [-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
#         [0.0,   0.0, 0.0,  0.5,  0.5,  0.0,  0.0,  0.0]
#     ],
#     "q": [
#         [-2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0],
#         [-1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0],
#         [-1.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0],
#         [-0.5,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5],
#         [0.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5],
#         [-1.0,  0.5,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0],
#         [-1.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.0, -1.0],
#         [-2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0]
#     ],
#     "k": [
#         [-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],
#         [-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],
#         [-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],
#         [-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],
#         [-2.0, -3.0, -3.0, -4.0, -4.0, -3.0, -3.0, -2.0],
#         [-1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0],
#         [2.0,  2.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0],
#         [2.0,  3.0,  1.0,  0.0,  0.0,  1.0,  3.0,  2.0]
#     ],
#     "P": [
#         [0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],
#         [0.5,  1.0, 1.0,  -2.0, -2.0,  1.0,  1.0,  0.5],
#         [0.5, -0.5, -1.0,  0.0,  0.0, -1.0, -0.5,  0.5],
#         [0.0,  0.0,  0.0,  2.0,  2.0,  0.0,  0.0,  0.0],
#         [0.5,  0.5,  1.0,  2.5,  2.5,  1.0,  0.5,  0.5],
#         [1.0,  1.0,  2.0,  3.0,  3.0,  2.0,  1.0,  1.0],
#         [5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0],
#         [0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0]
#     ],
#     "N": [
#         [-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0],
#         [-4.0, -2.0,  0.0,  0.5,  0.5,  0.0, -2.0, -4.0],
#         [-3.0,  0.5,  1.0,  1.5,  1.5,  1.0,  0.5, -3.0],
#         [-3.0,  0.0,  1.5,  2.0,  2.0,  1.5,  0.0, -3.0],
#         [-3.0,  0.5,  1.5,  2.0,  2.0,  1.5,  0.5, -3.0],
#         [-3.0,  0.0,  1.0,  1.5,  1.5,  1.0,  0.0, -3.0],
#         [-4.0, -2.0,  0.0,  0.0,  0.0,  0.0, -2.0, -4.0],
#         [-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0]
#     ],
#     "B": [
#         [-2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0],
#         [-1.0,  0.5,  0.0,  0.0,  0.0,  0.0,  0.5, -1.0],
#         [-1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0],
#         [-1.0,  0.0,  1.0,  1.0,  1.0,  1.0,  0.0, -1.0],
#         [-1.0,  0.5,  0.5,  1.0,  1.0,  0.5,  0.5, -1.0],
#         [-1.0,  0.0,  0.5,  1.0,  1.0,  0.5,  0.0, -1.0],
#         [-1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0],
#         [-2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0]
#     ],
#     "R": [
#         [0.0,   0.0, 0.0,  0.5,  0.5,  0.0,  0.0,  0.0],
#         [-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
#         [-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
#         [-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
#         [-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
#         [-0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],
#         [0.5,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  0.5],
#         [0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0]
#     ],
#     "Q": [
#         [-2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0],
#         [-1.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.0, -1.0],
#         [-1.0,  0.5,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0],
#         [0.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5],
#         [-0.5,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5],
#         [-1.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0],
#         [-1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0],
#         [-2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0]
#     ],
#     "K": [
#         [2.0,  3.0,  1.0,  0.0,  0.0,  1.0,  3.0,  2.0],
#         [2.0,  2.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0],
#         [-1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0],
#         [-2.0, -3.0, -3.0, -4.0, -4.0, -3.0, -3.0, -2.0],
#         [-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],
#         [-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],
#         [-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],
#         [-3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0]
#     ]
# }

# f(p) = position_of_piece 
def evaluate_board(board):
    score = 0

    for square, piece in board.piece_map().items():
        symbol = piece.symbol()
        position_weight = PIECE_WEIGHTS[symbol][chess.square_rank(
            square)][chess.square_file(square)]
        # If the piece is white
        if symbol.isupper():
            score -= PIECE_VALUES[symbol.lower()] + position_weight
        else:
            score += PIECE_VALUES[symbol.lower()] + position_weight

    # print(score)
    return score

def pickle_weights():
    with open("position_weights.pickle", "rb") as handle:
        # pickle.dump(PIECE_WEIGHTS, handle, protocol = pickle.HIGHEST_PROTOCOL)
        a = pickle.load(handle)
    print(a)

pickle_weights()